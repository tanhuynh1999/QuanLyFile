@using Model.EF
@model FileMain
@{
    ViewBag.Title = "Loading";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdn.jsdelivr.net/npm/tesseract.js@2.1.1/dist/tesseract.min.js"></script>
<link href="~/Content/imgupload.css" rel="stylesheet" />
<style>
    .day-6 .upload__wrapper {
        position: absolute;
        top: inherit;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        height: 70%;
        border-radius: 5px;
        background-color: #fff;
        box-shadow: inherit;
        overflow: hidden;
    }
</style>
<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-header border-0">
                <div class="row align-items-center">
                    <div class="col">
                        <h3 class="mb-0"></h3>
                    </div>
                </div>
            </div>
            <div class="">
                <!-- Projects table -->
                <table class="table align-items-center table-flush">
                    <thead class="bg-dark text-white">
                        <tr class="text-center">
                            <th scope="col"><i class="fa fa-file">&nbsp;</i>Thông tư</th>
                            <th scope="col"><i class="fa fa-atlas">&nbsp;</i>Hình thức</th>
                            <th scope="col"><i class="fa fa-calendar">&nbsp;</i>Ngày bắt đầu</th>
                            <th scope="col"><i class="fa fa-calendar-alt">&nbsp;</i>Ngày kết thúc</th>
                        </tr>
                    </thead>
                    <tbody class="text-center">
                        <tr>
                            <th scope="row">
                                @if (Model.file_circular == 200)
                                {
                                    <b>Thông tư 200</b>
                                }
                                else
                                {
                                    <b>Thông tư 133</b>
                                }
                            </th>
                            <td>
                                @if (Model.file_form == 1)
                                {
                                    <b>Gián tiếp</b>
                                }
                                else
                                {
                                    <b>Trực tiếp</b>
                                }
                            </td>
                            <td>
                                @Model.file_startday.Value.ToString("dd/MM/yyyy")
                            </td>
                            <td>
                                @Model.file_endday.Value.ToString("dd/MM/yyyy")
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4" id="app">
                                {{read}} 
                                <div class="progress w-100" id="pr" style="height: 60px">
                                    <div class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">10</div>
                                </div>
                                <img src="~/IMG/Img/@Model.file_img" style="width: 100%" />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script>
    var vm = new Vue({
        el: '#app',
        data: {
            message: 'Hello'
        },
        computed: {
            read: function () {

                const exampleImage = "/Img/Img/@Model.file_img";

                const worker = Tesseract.createWorker({
                    logger: m => document.getElementById("pr").innerHTML = '<div class="progress-bar" role="progressbar" style="width: ' + m.progress * 100 + '%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">' + parseInt(m.progress * 100) + '%</div>',
                });

                Tesseract.setLogging(true);
                work();

                async function work() {
                    await worker.load();
                    await worker.loadLanguage('vie');
                    await worker.initialize('vie');

                    let result = await worker.detect(exampleImage);
                    console.log(result.data);



                    result = await worker.recognize(exampleImage);
                    console.log(result.data);

                    await worker.terminate();


                    var arrall = [];
                    var arrone = [];
                    var arrnumber = [];
                    var confidence = [];
                    var x0 = [];
                    var y0 = [];
                    var x1 = [];
                    var y1 = [];

                    var link = "";
                    var linkconfidence = "";
                    var linkx0 = "";
                    var linky0 = "";
                    var linkx1 = "";
                    var linky1 = "";


                    var moneyRegex = /\d{1,3}(?:[.,]\d{3})*(?:[.,]\d{3})/;
                    var lineRegex = /-(?!\w|\(|\)\))/g;

                    //Count line
                    for (var i = 0; i < result.data.lines.length; i++) {
                        arrall.push(result.data.lines[i]);
                    }
                    console.log(arrall);

                    //Count text 
                    for (var i = 0; i < arrall.length; i++) {
                        arrone.push(arrall[i].words);
                    }
                    console.log(arrone);


                    //Cout price
                    for (var i = 0; i < arrone.length; i++) {
                        for (var j = 0; j < arrone[i].length; j++) {
                            if (arrone[i][j].text.match(moneyRegex) != null) {
                                arrnumber.push(arrone[i][j].text.match(moneyRegex));
                                confidence.push(arrone[i][j].confidence);
                                x0.push(arrone[i][j].baseline.x0);
                                y0.push(arrone[i][j].baseline.y0);
                                x1.push(arrone[i][j].baseline.x1);
                                y1.push(arrone[i][j].baseline.y1);
                            }
                            else if (arrone[i][j].text.match(lineRegex) != null) {
                                arrnumber.push(arrone[i][j].text.match(lineRegex));
                                confidence.push(arrone[i][j].confidence);
                                x0.push(arrone[i][j].baseline.x0);
                                y0.push(arrone[i][j].baseline.y0);
                                x1.push(arrone[i][j].baseline.x1);
                                y1.push(arrone[i][j].baseline.y1);
                            }
                        }
                    }
                    console.log(arrnumber);
                    console.log(confidence);
                    console.log(x0);


                    for (var i = 0; i < arrnumber.length; i++) {
                        link += "&price=" + arrnumber[i];
                    }
                    for (var i = 0; i < confidence.length; i++) {
                        linkconfidence += "&confidence=" + confidence[i];
                    }

                    for (var i = 0; i < x0.length; i++) {
                        linkx0 += "&x0=" + x0[i];
                    }
                    for (var i = 0; i < y0.length; i++) {
                        linky0 += "&y0=" + y0[i];
                    }
                    for (var i = 0; i < x1.length; i++) {
                        linkx1 += "&x1=" + x1[i];
                    }
                    for (var i = 0; i < y1.length; i++) {
                        linky1 += "&y1=" + y1[i];
                    }

                    fetch("/Read/CreateItem?" + link + linkconfidence + linkx0 + linky0 + linkx1 + linky1 + "")
                        .then(response => response.json())
                        .then(data => (this.totalVuePackages = data.total));


                }
            }
        }
    });
</script>


