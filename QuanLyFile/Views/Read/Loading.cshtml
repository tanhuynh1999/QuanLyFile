@using Model.EF
@model FileMain
@{
    ViewBag.Title = "Loading";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdn.jsdelivr.net/npm/tesseract.js@2.1.1/dist/tesseract.min.js"></script>
<link href="~/Content/imgupload.css" rel="stylesheet" />
<a href="~/Scripts/jquery-3.4.1.slim.min.map">~/Scripts/jquery-3.4.1.slim.min.map</a>
<style>
    .day-6 .upload__wrapper {
        position: absolute;
        top: inherit;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        height: 70%;
        border-radius: 5px;
        background-color: #fff;
        box-shadow: inherit;
        overflow: hidden;
    }
</style>
<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-header border-0">
                <div class="row align-items-center">
                    <div class="col">
                        <h3 class="mb-0"></h3>
                    </div>
                </div>
            </div>
            <div class="">
                <!-- Projects table -->
                <table class="table align-items-center table-flush">
                    <thead class="bg-dark text-white">
                        <tr class="text-center">
                            <th scope="col"><i class="fa fa-file">&nbsp;</i>Thông tư</th>
                            <th scope="col"><i class="fa fa-atlas">&nbsp;</i>Hình thức</th>
                            <th scope="col"><i class="fa fa-calendar">&nbsp;</i>Ngày bắt đầu</th>
                            <th scope="col"><i class="fa fa-calendar-alt">&nbsp;</i>Ngày kết thúc</th>
                        </tr>
                    </thead>
                    <tbody class="text-center">
                        <tr>
                            <th scope="row">
                                @if (Model.file_circular == 200)
                                {
                                    <b>Thông tư 200</b>
                                }
                                else
                                {
                                    <b>Thông tư 133</b>
                                }
                            </th>
                            <td>
                                @if (Model.file_form == 1)
                                {
                                    <b>Gián tiếp</b>
                                }
                                else
                                {
                                    <b>Trực tiếp</b>
                                }
                            </td>
                            <td>
                                @Model.file_startday.Value.ToString("dd/MM/yyyy")
                            </td>
                            <td>
                                @Model.file_endday.Value.ToString("dd/MM/yyyy")
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4" id="app">
                                {{read}}
                                <div class="progress w-100" id="pr" style="height: 60px">
                                    <div class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">10</div>
                                </div>
                                <img src="~/IMG/Img/@Model.file_img" style="width: 100%" class="mt-3" />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script>
    var vm = new Vue({
        el: '#app',
        data: {
            message: 'Hello'
        },
        computed: {
            read: function () {

                const exampleImage = "/Img/Img/@Model.file_img";

                const worker = Tesseract.createWorker({
                    logger: m => document.getElementById("pr").innerHTML = '<div class="progress-bar" role="progressbar" style="width: ' + m.progress * 100 + '%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">' + parseInt(m.progress * 100) + '%</div>',
                });

                Tesseract.setLogging(true);
                work();

                async function work() {
                    await worker.load();
                    await worker.loadLanguage('vie');
                    await worker.initialize('vie');

                    let result = await worker.detect(exampleImage);
                    console.log(result.data);



                    result = await worker.recognize(exampleImage);
                    console.log(result.data);

                    await worker.terminate();


                    var arrall = [];
                    var arrone = [];
                    var arrnumber = [];
                    var confidence = [];
                    var x0 = [];
                    var y0 = [];
                    var x1 = [];
                    var y1 = [];
                    var target = [];
                    var codeitem = [];

                    var link = "";
                    var linkconfidence = "";
                    var linkx0 = "";
                    var linky0 = "";
                    var linkx1 = "";
                    var linky1 = "";
                    var linktarget = "";
                    var linkcodeitem = "";


                    var moneyRegex = /\d{1,3}(?:[.,]\d{3})*(?:[.,]\d{3})/;
                    var lineRegex = /-(?!\w|\(|\)\))/g;
                    var codekey = /\s(1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|60|61|62|63|64|65|66|67|68|69|70|71|72|73|74|75|76|77|78|79|80|81|82|83|84|85|86|87|88|89|90|91|92|93|94|95|96|97|98|99|100|101|102|103|104|105|106|107|108|109|110|111|112|113|114|115|116|117|118|119|120|121|122|123|124|125|126|127|128|129|130|131|132|133|134|135|136|137|138|139|140|141|142|143|144|145|146|147|148|149|150|151|152|153|154|155|156|157|158|159|160|161|162|163|164|165|166|167|168|169|170|171|172|173|174|175|176|177|178|179|180|181|182|183|184|185|186|187|188|189|190|191|192|193|194|195|196|197|198|199|200|201|202|203|204|205|206|207|208|209|210|211|212|213|214|215|216|217|218|219|220|221|222|223|224|225|226|227|228|229|230|231|232|233|234|235|236|237|238|239|240|241|242|243|244|245|246|247|248|249|250|251|252|253|254|255|256|257|258|259|260|261|262|263|264|265|266|267|268|269|270|271|272|273|274|275|276|277|278|279|280|281|282|283|284|285|286|287|288|289|290|291|292|293|294|295|296|297|298|299|300|301|302|303|304|305|306|307|308|309|310|311|312|313|314|315|316|317|318|319|320|321|322|323|324|325|326|327|328|329|330|331|332|333|334|335|336|337|338|339|340|341|342|343|344|345|346|347|348|349|350|351|352|353|354|355|356|357|358|359|360|361|362|363|364|365|366|367|368|369|370|371|372|373|374|375|376|377|378|379|380|381|382|383|384|385|386|387|388|389|390|391|392|393|394|395|396|397|398|399|400|401|402|403|404|405|406|407|408|409|410|411|412|413|414|415|416|417|418|419|420|421|422|423|424|425|426|427|428|429|430|431|432|433|434|435|436|437|438|439|440|441|442|443|444|445|446|447|448|449|450|451|452|453|454|455|456|457|458|459|460|461|462|463|464|465|466|467|468|469|470|471|472|473|474|475|476|477|478|479|480|481|482|483|484|485|486|487|488|489|490|491|492|493|494|495|496|497|498|499|500|501|502|503|504|505|506|507|508|509|510|511|512|513|514|515|516|517|518|519|520|521|522|523|524|525|526|527|528|529|530|531|532|533|534|535|536|537|538|539|540|541|542|543|544|545|546|547|548|549|550|551|552|553|554|555|556|557|558|559|560|561|562|563|564|565|566|567|568|569|570|571|572|573|574|575|576|577|578|579|580|581|582|583|584|585|586|587|588|589|590|591|592|593|594|595|596|597|598|599|600|601|602|603|604|605|606|607|608|609|610|611|612|613|614|615|616|617|618|619|620|621|622|623|624|625|626|627|628|629|630|631|632|633|634|635|636|637|638|639|640|641|642|643|644|645|646|647|648|649|650)\s/;


                    //Count line
                    for (var i = 0; i < result.data.lines.length; i++) {
                        arrall.push(result.data.lines[i]);
                    }
                    console.log(arrall);

                    //Count text
                    for (var i = 0; i < arrall.length; i++) {
                        arrone.push(arrall[i].words);
                    }
                    console.log(arrone);


                    //Cout price
                    for (var i = 0; i < arrone.length; i++) {
                        for (var j = 0; j < arrone[i].length; j++) {
                            if (arrone[i][j].text.match(moneyRegex) != null) {
                                arrnumber.push(arrone[i][j].text.match(moneyRegex));
                                confidence.push(arrone[i][j].confidence);
                                x0.push(arrone[i][j].bbox.x0);
                                y0.push(arrone[i][j].bbox.y0);
                                x1.push(arrone[i][j].bbox.x1);
                                y1.push(arrone[i][j].bbox.y1);
                            }
                            else if (arrone[i][j].text.match(lineRegex) != null) {
                                arrnumber.push(arrone[i][j].text.match(lineRegex));
                                confidence.push(arrone[i][j].confidence);
                                x0.push(arrone[i][j].bbox.x0);
                                y0.push(arrone[i][j].bbox.y0);
                                x1.push(arrone[i][j].bbox.x1);
                                y1.push(arrone[i][j].bbox.y1);
                            }
                        }
                        var cutmoney = arrall[i].text.replace(moneyRegex, "");
                        target.push(cutmoney.replace(codekey, ""));
                        codeitem.push(parseInt(arrall[i].text.match(codekey)));
                    }
                    console.log(arrnumber);
                    console.log(confidence);
                    console.log(x0);
                    console.log(target);
                    console.log(codeitem);


                    for (var i = 0; i < arrnumber.length; i++) {
                        link += "&price=" + arrnumber[i];
                        linkconfidence += "&confidence=" + confidence[i];
                        linky0 += "&y0=" + y0[i];
                        linkx0 += "&x0=" + x0[i];
                        linky1 += "&y1=" + y1[i];
                        linkx1 += "&x1=" + x1[i];
                        linktarget += "&target=" + target[i];
                        linkcodeitem += "&itemcode=" + codeitem[i];
                    }

                    fetch("/Read/CreateItem?" + link + linkconfidence + linkx0 + linky0 + linkx1 + linky1 + linkcodeitem + linktarget+"")
                        .then(response => response.json())
                        .then(data => (this.totalVuePackages = data.total));


                    console.log("/Read/CreateItem?" + link + linkconfidence + linkx0 + linky0 + linkx1 + linky1 + linkcodeitem + linktarget + "");

                    setTimeout(function () {
                        window.location.href = "/Read/ChangeVertion?id=@Model.file_id";
                    }, 2000);

                }
            }
        }
    });
</script>


